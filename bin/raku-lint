#!/usr/bin/env raku

use Raku::Lint;

if !@*ARGS {
    say qq:to/HERE/;
    Usage: {$*PROGRAM.basename} [options...] <files to check...>

    Checks files for errors:

      matching =begin/=end blocks
      file opens without a close

    Options:

      --file=X   Files listed in file X are added to the list of files
                   to check.
      --verbose  Reports findings in detail to stdout.
    HERE
    exit;
}

my $verbose = 0;
my %ifils   = [];
my $debug   = 0;
my $ifil    = 0;
for @*ARGS -> $arg {
    if !$arg.IO.f  {
        if $arg ~~ /:i ^ '-'? '-d' [ebug]? $/ {
            ++$debug;
        }
        elsif $arg ~~ /:i ^ '-'? '-v' [erbose]? $/ {
            ++$verbose;
        }
        elsif $arg ~~ /:i ^ '--file=' (.+) / {
            $ifil = ~$0;
        }
        else {
            say "FATAL:  Unknown arg '$arg'.";
            exit;
        }
        next;
    }

    # must be a file
    unless $arg and $arg.IO.f {
        say "FATAL: Arg '$arg' is not a file.";
        exit;
    }
    %ifils{$arg} = 1;
}

my $tifil = 't/data/f0.raku';
if $debug {
    %ifils{$tifil}++;
}

die "FATAL: No files entered.\n" if !%ifils && !$ifil;

my $ostr = lint(:%ifils, :$ifil, :$verbose, :$debug);
say $ostr;
